{% extends 'base.html.twig' %}

{% block title %}Pet Registration - Step 2{% endblock %}

{% block body %}
<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Header -->
    <div class="flex justify-between items-center mb-6">
        <div class="flex items-center space-x-3">
            <span class="text-2xl">üêæ</span>
            <h1 class="text-2xl font-bold text-gray-900">Pet Registration</h1>
        </div>
        <a href="{{ path('pet_list') }}" class="btn btn-secondary">View Pets</a>
    </div>

    <!-- Main Title -->
    <h2 class="text-center text-3xl font-bold text-gray-900 mb-8">Pet Registration</h2>

    <!-- Progress Steps -->
    <div class="grid grid-cols-3 gap-4 mb-12">
        <div class="text-center">
            <div class="step-container">
                <div class="step-circle completed">
                    <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                    </svg>
                </div>
                <div class="step-label completed">Pet Info</div>
            </div>
        </div>
        <div class="text-center">
            <div class="step-container">
                <div class="step-circle active">
                    <span class="step-number">2</span>
                </div>
                <div class="step-label active">Breed Info</div>
            </div>
        </div>
        <div class="text-center">
            <div class="step-container">
                <div class="step-circle">
                    <span class="step-number">3</span>
                </div>
                <div class="step-label">Additional Info</div>
            </div>
        </div>
    </div>

    <!-- Form Card -->
    <div class="bg-white shadow-lg rounded-2xl border-0 max-w-2xl mx-auto">
        <div class="p-8">
            <h3 class="text-center text-xl font-bold text-gray-900 mb-6">Step 2: Breed Information</h3>

            {% for message in app.flashes('error') %}
                <div class="alert alert-error">
                    {{ message }}
                </div>
            {% endfor %}

            <form method="post" id="breedForm" class="space-y-6">
                <div>
                    <label for="breed_option" class="block text-sm font-semibold text-gray-700 mb-2">
                        Breed Option <span class="text-red-500">*</span>
                    </label>
                    <select class="form-select text-lg py-3" id="breed_option" name="breed_option" required>
                        <option value="">Select an option</option>
                        <option value="know_breed" {{ (petData.breed_option ?? '') == 'know_breed' ? 'selected' : '' }}>I know the breed</option>
                        <option value="dont_know" {{ (petData.breed_option ?? '') == 'dont_know' ? 'selected' : '' }}>Don't know</option>
                        <option value="mix" {{ (petData.breed_option ?? '') == 'mix' ? 'selected' : '' }}>Mix</option>
                        <option value="custom" {{ (petData.breed_option ?? '') == 'custom' ? 'selected' : '' }}>Other (specify)</option>
                    </select>
                </div>

                <!-- Breed Selection (shown when "I know the breed" is selected) -->
                <div id="breed_selection" style="display: none;">
                    <label for="breed_id" class="block text-sm font-semibold text-gray-700 mb-2">
                        Breed <span class="text-red-500">*</span>
                    </label>
                    <select class="form-select text-lg py-3" id="breed_id" name="breed_id">
                        <option value="">Select breed</option>
                    </select>
                    <div id="dangerous_breed_warning" class="bg-yellow-50 border border-yellow-200 text-yellow-800 px-4 py-3 rounded-lg mt-3" style="display: none;">
                        <div class="flex items-center">
                            <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                            </svg>
                            <strong>Dangerous Breed Notice:</strong> <span id="breed_name_display"></span> breed is marked as dangerous.
                        </div>
                    </div>
                </div>

                <!-- Custom Breed Name (shown when "Other" is selected) -->
                <div id="custom_breed_input" style="display: none;">
                    <label for="custom_breed_name" class="block text-sm font-semibold text-gray-700 mb-2">
                        Breed Name <span class="text-red-500">*</span>
                    </label>
                    <input type="text"
                           class="form-input text-lg py-3"
                           id="custom_breed_name"
                           name="custom_breed_name"
                           value="{{ petData.custom_breed_name ?? '' }}"
                           placeholder="Enter breed name">
                </div>

                <div class="flex space-x-4 pt-4">
                    <a href="{{ path('pet_register_step1') }}" class="flex-1 btn btn-secondary text-lg py-3 text-center">Back</a>
                    <button type="submit" class="flex-1 btn btn-primary text-lg py-3 font-semibold">Next</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Footer -->
    <div class="text-center mt-8 text-gray-500">
        <p class="text-sm">¬© 2025 Pet Registration. All rights reserved.</p>
        <div class="mt-2 space-x-4">
            <a href="#" class="text-gray-500 hover:text-gray-700 text-sm">Privacy</a>
            <a href="#" class="text-gray-500 hover:text-gray-700 text-sm">Terms</a>
            <a href="#" class="text-gray-500 hover:text-gray-700 text-sm">Contact</a>
        </div>
    </div>
</div>

<style>
.step-container {
    position: relative;
}

.step-circle {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: #e5e7eb;
    color: #6b7280;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 10px;
    font-weight: bold;
    font-size: 18px;
    transition: all 0.3s ease;
}

.step-circle.active {
    background-color: #3b82f6;
    color: white;
}

.step-circle.completed {
    background-color: #10b981;
    color: white;
}

.step-label {
    font-size: 14px;
    color: #6b7280;
    font-weight: 500;
}

.step-label.active {
    color: #3b82f6;
    font-weight: 600;
}

.step-label.completed {
    color: #10b981;
    font-weight: 600;
}

/* Form Styles */
.form-input, .form-select {
    width: 100%;
    padding: 12px 16px;
    border: 2px solid #d1d5db;
    border-radius: 12px;
    font-size: 16px;
    background-color: white;
    transition: all 0.2s ease;
    outline: none;
}

.form-input:focus, .form-select:focus {
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.btn {
    padding: 12px 24px;
    border-radius: 12px;
    font-weight: 600;
    text-decoration: none;
    display: inline-block;
    text-align: center;
    transition: all 0.2s ease;
    border: 2px solid transparent;
    cursor: pointer;
}

.btn-primary {
    background-color: #3b82f6;
    color: white;
    border-color: #3b82f6;
}

.btn-primary:hover {
    background-color: #2563eb;
    border-color: #2563eb;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
}

.btn-secondary {
    background-color: #f3f4f6;
    color: #374151;
    border-color: #d1d5db;
}

.btn-secondary:hover {
    background-color: #e5e7eb;
    border-color: #9ca3af;
}

.alert {
    padding: 12px 16px;
    border-radius: 8px;
    margin-bottom: 16px;
}

.alert-error {
    background-color: #fef2f2;
    border: 1px solid #fca5a5;
    color: #dc2626;
}

.alert-warning {
    background-color: #fef3c7;
    border: 1px solid #f59e0b;
    color: #92400e;
    margin-top: 8px;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    console.log('Step 2 JavaScript loaded');

    const breedOption = document.getElementById('breed_option');
    const breedSelection = document.getElementById('breed_selection');
    const customBreedInput = document.getElementById('custom_breed_input');
    const breedSelect = document.getElementById('breed_id');
    const dangerousBreedWarning = document.getElementById('dangerous_breed_warning');
    const breedNameDisplay = document.getElementById('breed_name_display');

    console.log('Elements found:', {
        breedOption: !!breedOption,
        breedSelection: !!breedSelection,
        customBreedInput: !!customBreedInput,
        breedSelect: !!breedSelect,
        dangerousBreedWarning: !!dangerousBreedWarning,
        breedNameDisplay: !!breedNameDisplay
    });

    // Handle breed option change
    breedOption.addEventListener('change', function() {
        const value = this.value;
        console.log('Breed option changed to:', value);

        // Hide all conditional fields
        breedSelection.style.display = 'none';
        customBreedInput.style.display = 'none';
        dangerousBreedWarning.style.display = 'none';

        // Clear values
        breedSelect.value = '';
        const customBreedNameInput = document.getElementById('custom_breed_name');
        if (customBreedNameInput) {
            customBreedNameInput.value = '';
        }

        if (value === 'know_breed') {
            console.log('Showing breed selection');
            breedSelection.style.display = 'block';
            loadBreeds();
        } else if (value === 'custom') {
            console.log('Showing custom breed input');
            customBreedInput.style.display = 'block';
        }
    });

    // Load breeds based on pet type
    function loadBreeds() {
        const petTypeId = {{ petData.type_id|default('null') }};
        console.log('Pet type ID:', petTypeId);

        if (!petTypeId || petTypeId === null) {
            console.error('No pet type ID found - redirecting to step 1');
            // Show error message and redirect
            alert('Please start from Step 1 to select your pet type first.');
            window.location.href = '/pet/register/step1';
            return;
        }

        console.log('Loading breeds for pet type:', petTypeId);
        fetch(`/pet/api/breeds/${petTypeId}`)
            .then(response => {
                console.log('API response status:', response.status);
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(breeds => {
                console.log('Breeds loaded:', breeds);
                const selectedBreedId = {{ petData.breed_id|default('null') }};
                console.log('Selected breed ID from session:', selectedBreedId);

                breedSelect.innerHTML = '<option value="">Select breed</option>';
                breeds.forEach(breed => {
                    const option = document.createElement('option');
                    option.value = breed.id;
                    option.textContent = breed.name;
                    option.dataset.dangerous = breed.isDangerous;

                    // Select the breed if it matches the session data
                    if (selectedBreedId && breed.id == selectedBreedId) {
                        option.selected = true;
                        console.log('Pre-selecting breed:', breed.name);
                    }

                    breedSelect.appendChild(option);
                });

                // Trigger danger check if a breed is pre-selected
                if (selectedBreedId) {
                    checkBreedDanger();
                }
            })
            .catch(error => {
                console.error('Error loading breeds:', error);
                alert('Error loading breeds. Please try again.');
            });
    }

    // Check if selected breed is dangerous
    breedSelect.addEventListener('change', checkBreedDanger);

    function checkBreedDanger() {
        const selectedOption = breedSelect.options[breedSelect.selectedIndex];
        if (selectedOption && selectedOption.dataset.dangerous === 'true') {
            breedNameDisplay.textContent = selectedOption.textContent;
            dangerousBreedWarning.style.display = 'block';
        } else {
            dangerousBreedWarning.style.display = 'none';
        }
    }

    // Initialize form state based on existing values
    console.log('Initializing form state. Current breed_option value:', breedOption.value);

    // Always trigger change event to initialize the form properly
    if (breedOption.value) {
        console.log('Triggering change event for existing value:', breedOption.value);
        breedOption.dispatchEvent(new Event('change'));
    }

    // Also check for any pre-selected breed and trigger danger check
    setTimeout(function() {
        if (breedSelect.value) {
            console.log('Found pre-selected breed:', breedSelect.value);
            checkBreedDanger();
        }
    }, 100);
});
</script>
{% endblock %}
